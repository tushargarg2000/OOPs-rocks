import java.util.*;
import java.io.*;

class Node{
    int data;
    Node next;
    Node(int data){
        this.data = data;
        next = null;
    }
}
class LinkedList{
    Node head;
    void add(int data ){
        Node new_node = new Node(data);
        if(head == null){
            head = new_node;
            return;
        }
        Node current = head;
        while(current.next !=null){
            current = current.next;
        }
        current.next = new_node;
    }
}

class Solution {
    static Node insert(Node head, int n, int pos, int val) {
        // Write your code here.

		//1. Create the node
		Node newNode = new Node(val);

		if(pos==0){
			newNode.next = head;
			head = newNode;
			return head;
		}



		//2. Iterate to the pos 1 less that the desired position
		int reachPosition = pos-1;

		Node node = head;

		//We are trying to reach 1 pos before the pos
		while(reachPosition>0){
			node = node.next;
			reachPosition--;
		}

		Node temp = node.next;

		newNode.next = temp; //Link1 connecting our newNode next address

		node.next = newNode;

		return head;

    }
}

public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        LinkedList list = new LinkedList();
        for (int i = 0; i < n; i++) {
            list.add(sc.nextInt());
        }
        int val = sc.nextInt();
        int pos = sc.nextInt();
        Node head = Solution.insert(list.head, n, pos, val);
        while (head != null) {
            System.out.print(head.data + " ");
            head = head.next;
        }
    }
}